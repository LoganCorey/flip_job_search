{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Home/InputSection/InputField/InputField.tsx","actions/actiontypes.ts","components/Home/InputSection/Input.tsx","actions/TextInputActions.ts","actions/compareActions.ts","actions/compareActionTypes.ts","components/Home/Scan/Scan.tsx","components/Home/Home.tsx","components/Results/KeywordsSection/KeywordsSection.tsx","components/Results/MatchRate/Rating/Rating.tsx","components/Results/MatchRate/MatchRate.tsx","components/Results/Results.tsx","App.tsx","serviceWorker.ts","store/reducers/TextInput.ts","store/reducers/Scan.ts","index.tsx","components/Results/MatchRate/Rating/styles.module.css","components/Home/InputSection/InputField/styles.module.css","components/Home/styles.module.css"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Navigation","props","classes","useTheme","React","useState","open","setOpen","links","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","to","style","textDecoration","Typography","variant","noWrap","Drawer","paper","align","direction","Divider","List","map","text","index","key","ListItem","button","ListItemIcon","ListItemText","primary","children","InputField","Paper","elevation","component","title","TextField","id","label","multiline","rows","Input","margin","value","onChange","handleChange","Button","clearText","CLEAR_RESUME","CHANGE_RESUME_TEXT","CLEAR_JOB","CHANGE_JOB_TEXT","connect","state","resumeText","textInputerReducer","jobText","dispatch","changeResumeText","ev","type","actionTypes","target","clearResumeText","changeJobText","clearJobText","Fragment","Container","maxWidth","marginTop","Grid","container","justify","item","xs","sm","axios","defaults","xsrfHeaderName","xsrfCookieName","saveResult","res","payload","loading","compareTextHandler","resume_text","job_text","data","FormData","append","post","then","response","console","log","catch","error","compare","borderRadius","fontSize","Home","subtitle","createData","skill","resume","job_posting","desc","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","createStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","dark","spacer","flex","actions","EnhancedTableToolbar","Tooltip","marginBottom","table","minWidth","tableWrapper","border","clip","height","overflow","top","resumeSkills","scanReducer","jobSkills","jobPostingSkills","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","hasOwnProperty","push","emptyRows","Math","min","length","fontWeight","Table","aria-labelledby","size","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","Rating","flexWrapper","singleChart","viewBox","circularChart","green","circleBg","d","circle","stroke-dasharray","rating","x","y","percentage","Box","mt","scanned","LinearProgress","App","exact","path","Results","Boolean","window","location","hostname","match","initialState","scanText","reducer","action","createMuiTheme","rootReducer","combineReducers","textInputReducer","store","createStore","applyMiddleware","thunk","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.068aa785.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Navigation(props:any) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const links:any = ['/', '/results', '/history', '/readability_test'];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n         <Link to=\"/\" style={{color:'white', textDecoration:'none'}}> <Typography variant=\"h6\"  noWrap>\r\n            Flip\r\n          </Typography> </Link>\r\n        </Toolbar>\r\n  \r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <Typography variant=\"h6\" align=\"center\" style={{marginRight:'50px'}}>\r\n            Menu\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n\r\n        </div>\r\n\r\n        <Divider />\r\n        \r\n        <List>\r\n          {['Compare', 'Results'].map((text, index) => (\r\n              <Link to={links[index]} style={{textDecoration:'none', color:'black'}} key={index}>\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n\r\n            </ListItem>\r\n                <Divider />\r\n            </Link>\r\n\r\n          ))}\r\n        </List>\r\n      \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n          {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './styles.module.css';\r\n\r\ntype InputProps = {\r\n    title: string,\r\n    label: string,\r\n    text: string,\r\n    handleChange: any,\r\n    clearText:any,\r\n    children: any,\r\n}\r\n\r\nconst InputField = (props: InputProps) => {\r\n\r\n    return (\r\n        <Paper elevation={5} style={{padding: \"20px\"}}>\r\n            <Typography variant=\"h5\" component=\"h5\" color=\"primary\">\r\n                {props.title}\r\n            </Typography>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label={props.label}\r\n                multiline\r\n                rows=\"20\"\r\n                className={classes.Input}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={props.text}\r\n                onChange={props.handleChange}\r\n            />\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'flex-end', width: '100%'}}>\r\n                <div>\r\n                    <Button className={classes.Button} onClick={props.clearText}> {props.children} clear text</Button>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default InputField;","export const CLEAR_RESUME = 'CLEAR_RESUME';\r\nexport const CHANGE_RESUME_TEXT = 'CHANGE_RESUME_TEXT';\r\nexport const CLEAR_JOB = 'CLEAR_JOB';\r\nexport const CHANGE_JOB_TEXT = 'CHANGE_JOB_TEXT';","import React from \"react\";\r\nimport InputField from \"./InputField/InputField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeResumeText,\r\n    clearResumeText,\r\n    changeJobText,\r\n    clearJobText\r\n} from \"../../../actions/TextInputActions\";\r\n\r\n\r\ntype InputProps = {\r\n    resumeText: string,\r\n    jobText: string\r\n}\r\n\r\n/**\r\n * General component for inputting Text\r\n */\r\nconst InputSection = (props: any) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"lg\" style={{marginTop: \"40px\"}}>\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputField\r\n                            title=\"Paste Resume\"\r\n                            label=\"Resume Text\"\r\n                            text={props.resumeText}\r\n                            handleChange={props.changeResumeText}\r\n                            clearText={props.clearResumeText}\r\n                        >\r\n                            <DeleteIcon/>\r\n                        </InputField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n                        <InputField\r\n                            title=\"Paste Job Description\"\r\n                            label=\"Job Text\"\r\n                            text={props.jobText}\r\n                            handleChange={props.changeJobText}\r\n                            clearText={props.clearJobText}\r\n                        >\r\n                            <DeleteIcon/>\r\n                        </InputField>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: any): InputProps => {\r\n    return {\r\n        resumeText: state.textInputerReducer.resumeText,\r\n        jobText: state.textInputerReducer.jobText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeResumeText: (ev: any) => dispatch(changeResumeText(ev)),\r\n        clearResumeText: () => dispatch(clearResumeText()),\r\n        changeJobText: (ev: any) => dispatch(changeJobText(ev)),\r\n        clearJobText: () => dispatch(clearJobText())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSection);\r\n","import * as actionTypes from \"./actiontypes\";\r\n\r\nexport function changeResumeText(event: any) {\r\n  return {\r\n    type: actionTypes.CHANGE_RESUME_TEXT,\r\n    text: event.target.value\r\n  };\r\n}\r\n\r\nexport function clearResumeText(text = \"\") {\r\n  return {\r\n    type: actionTypes.CLEAR_RESUME,\r\n    text: text\r\n  };\r\n}\r\n\r\nexport function changeJobText(e: any) {\r\n  return {\r\n    type: actionTypes.CHANGE_JOB_TEXT,\r\n    text: e.target.value\r\n  };\r\n}\r\n\r\nexport function clearJobText() {\r\n  return {\r\n    type: actionTypes.CLEAR_JOB,\r\n    text: \"\"\r\n  };\r\n}\r\n","import * as actionTypes from './compareActionTypes';\r\nimport axios from 'axios';\r\n\r\n//https://stackoverflow.com/questions/39254562/csrf-with-django-reactredux-using-axios\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n// Saves the result from compare\r\nexport const saveResult = (res: any) => {\r\n  return {\r\n    type: actionTypes.COMPARE,\r\n    payload: res['data']\r\n  }\r\n};\r\n\r\nconst loading = () => {\r\n  return {\r\n    type: actionTypes.LOADING\r\n  }\r\n}\r\n\r\nexport function compare(resume_text: string, job_text: string) {\r\n\r\n  let data = new FormData();\r\n  data.append(\"job_text\", job_text);\r\n  data.append(\"resume_text\", resume_text);\r\n\r\n  return (dispatch: any) => {\r\n    dispatch(loading());\r\n    axios.post('/api/skill/compare/', data)\r\n      .then(function(response) {\r\n        console.log(response);\r\n        dispatch(saveResult((response)))\r\n        dispatch(loading());\r\n      })\r\n      .catch(function(error) {\r\n        dispatch(loading());\r\n        console.log(error);\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","export const COMPARE = 'COMPARE';\r\nexport const LOADING = 'LOADING';\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from 'react-redux';\r\nimport { compare } from '../../../actions/compareActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype ScanProps = {\r\n  resumeText: string,\r\n  jobText: string,\r\n  compareTextHandler: Function\r\n}\r\n\r\n\r\n/**\r\n * Component for scanning a users resume and a job posting\r\n */\r\nconst Scan = (props: ScanProps) => {\r\n  return (\r\n    <div\r\n      style={{ marginTop: \"40px\", display: \"flex\", justifyContent: \"center\" }}\r\n    >\r\n      <Link to={\"/results\"}>\r\n\r\n        <Button variant=\"contained\"\r\n\r\n          onClick={() => props.compareTextHandler(props.resumeText, props.jobText)}\r\n          color=\"primary\"\r\n          style={{ color: 'white', borderRadius: '5px', width: '400px', padding: '5px', fontSize: \"1.2em\" }}>\r\n          Scan\r\n                </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    resumeText: state.textInputerReducer.resumeText,\r\n    jobText: state.textInputerReducer.jobText\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    compareTextHandler: (resume_text: string, job_text: string) => dispatch(compare(resume_text, job_text)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan);\r\n","import React from \"react\";\r\nimport InputSection from \"./InputSection/Input\";\r\nimport Scan from \"./Scan/Scan\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classes from './styles.module.css';\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n/**\r\n * Basic component where a user can scan a resume and job posting\r\n */\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Fade >\r\n            <Typography variant={\"h4\"} className={classes.title} component={\"h4\"} align=\"center\">\r\n                Scan Your Resume and Job Posting\r\n            </Typography>\r\n            <Typography variant={\"h6\"} className={classes.subtitle} component={\"h6\"} align=\"center\">\r\n                See how closely your resume compares\r\n            </Typography>\r\n            <InputSection/>\r\n            <Scan/>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, lighten, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Container from '@material-ui/core/Container';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface Data {\r\n    skill: string;\r\n    resume: number;\r\n    job_posting: number;\r\n}\r\n\r\nfunction createData(\r\n    skill: string,\r\n    resume: number,\r\n    job_posting: number,\r\n): Data {\r\n    return {skill, resume, job_posting};\r\n}\r\n\r\n\r\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getSorting<K extends keyof any>(\r\n    order: Order,\r\n    orderBy: K,\r\n): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface headCell {\r\n    disablePadding: boolean;\r\n    id: keyof Data;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\nconst headCells: headCell[] = [\r\n    {id: 'skill', numeric: false, disablePadding: true, label: 'Skill Name'},\r\n    {id: 'resume', numeric: true, disablePadding: false, label: 'Resume'},\r\n    {id: 'job_posting', numeric: true, disablePadding: false, label: 'Job Posting'},\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n    classes: ReturnType<typeof useStyles>;\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    /*const rows = [\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n    ];*/\r\n\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n\r\n                        inputProps={{'aria-label': 'select all desserts'}}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={'center'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={order}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        highlight:\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    color: theme.palette.secondary.main,\r\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n                : {\r\n                    color: theme.palette.text.primary,\r\n                    backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n        spacer: {\r\n            flex: '1 1 100%',\r\n        },\r\n        actions: {\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        title: {\r\n            flex: '0 0 auto',\r\n        },\r\n    }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const classes = useToolbarStyles();\r\n    const {numSelected} = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <div className={classes.title}>\r\n                {numSelected > 0 ? (\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        Job Posting Skills\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            <div className={classes.spacer}/>\r\n            <div className={classes.actions}>\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton aria-label=\"delete\">\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : (\r\n                    <Tooltip title=\"Filter list\">\r\n                        <IconButton aria-label=\"filter list\">\r\n                            <FilterListIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        paper: {\r\n            width: '100%',\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        table: {\r\n            minWidth: 750,\r\n        },\r\n        tableWrapper: {\r\n            overflowX: 'auto',\r\n        },\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n        },\r\n    }),\r\n);\r\nconst KeywordsSection = (props: any) => {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('job_posting');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    // Build array of rows\r\n    let rows: Array<Data> = [];\r\n    for (let key in props.jobSkills) {\r\n        if (props.resumeSkills.hasOwnProperty(key)) {\r\n            rows.push(createData(key, props.resumeSkills[key], props.jobSkills[key]))\r\n        } else {\r\n            rows.push(createData(key, 0, props.jobSkills[key]))\r\n        }\r\n    }\r\n\r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n        const isDesc = orderBy === property && order === 'desc';\r\n        setOrder(isDesc ? 'asc' : 'desc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map(n => n.skill);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n\r\n    return (\r\n        <Container maxWidth={\"lg\"} style={{marginTop: '40px'}}>\r\n            <Typography variant={\"h4\"} component=\"h4\" align={\"left\"}\r\n                        style={{fontWeight: 500}}>\r\n                Employer Skills\r\n            </Typography>\r\n            <Typography variant={\"h6\"} component=\"h6\" align={\"left\"}\r\n                        style={{marginBottom: '20px', fontWeight: 500, color: 'rgba(0,0,0,0.5)'}}>\r\n                Hover over any of the column names to sort the column\r\n            </Typography>\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                    <EnhancedTableToolbar numSelected={selected.length}/>\r\n                    <div className={classes.tableWrapper}>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={rows.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(rows, getSorting(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((row, index) => {\r\n                                        const isItemSelected = isSelected(row.skill);\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                onClick={event => handleClick(event, row.skill)}\r\n                                                role=\"checkbox\"\r\n\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={row.skill}\r\n                                                selected={isItemSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\" >\r\n                                                    <Checkbox\r\n                                                        checked={isItemSelected}\r\n                                                        inputProps={{'aria-labelledby': labelId}}\r\n                                                    />\r\n                                                </TableCell>\r\n\r\n                                                <TableCell component=\"th\" align={\"center\"} id={labelId} scope=\"row\" padding=\"none\">\r\n                                                    {row.skill}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"center\">{row.resume}</TableCell>\r\n                                                <TableCell align=\"center\">{row.job_posting}</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{height: 49 * emptyRows}}>\r\n                                        <TableCell colSpan={6}/>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        backIconButtonProps={{\r\n                            'aria-label': 'previous page',\r\n                        }}\r\n                        nextIconButtonProps={{\r\n                            'aria-label': 'next page',\r\n                        }}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <FormControlLabel\r\n                    control={<Switch checked={dense} onChange={handleChangeDense}/>}\r\n                    label=\"Dense padding\"\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n};\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        resumeSkills: state.scanReducer.resumeSkills,\r\n        jobSkills: state.scanReducer.jobPostingSkills\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(KeywordsSection);","import React from 'react';\r\nimport classes from './styles.module.css';\r\n\r\nconst Rating = (props: any) => {\r\n    return (\r\n        <div className={classes.flexWrapper}>\r\n            <div className={classes.singleChart}>\r\n                <svg viewBox=\"0 0 36 36\" className={classes.circularChart + ' ' + classes.green}>\r\n                    <path className={classes.circleBg}\r\n                          d=\"M18 2.0845\r\n          a 15.9155 15.9155 0 0 1 0 31.831\r\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                    />\r\n                    <path className={classes.circle}\r\n                          stroke-dasharray={props.rating + \", 100\"}\r\n                          d=\"M18 2.0845\r\n          a 15.9155 15.9155 0 0 1 0 31.831\r\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                    />\r\n                    <text x=\"19\" y=\"20.35\" className={classes.percentage}>{props.rating}%</text>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Rating;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Rating from './Rating/Rating';\r\nimport {connect} from 'react-redux';\r\n\r\nconst MatchRate = (props: any) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={5}>\r\n                <Typography variant={\"h3\"} component=\"h3\" align={\"center\"}\r\n                            style={{fontWeight: 500}}>\r\n                    Check Out How You Did\r\n                </Typography>\r\n                <Typography variant={\"h5\"} component=\"h5\" align={\"center\"}\r\n                            style={{marginBottom: '20px', fontWeight: 500, color: 'rgba(0,0,0,0.5)'}}>\r\n                    Your match rating\r\n                </Typography>\r\n                <Rating rating={props.rating}/>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        rating: state.scanReducer.rating,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MatchRate);\r\n","import React from 'react';\r\nimport KeywordsSection from './KeywordsSection/KeywordsSection';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MatchRate from './MatchRate/MatchRate';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { connect } from 'react-redux';\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginTop: '50px',\r\n    maxWidth: '90%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n  },\r\n\r\n  title: {\r\n    fontWeight: 500,\r\n  }\r\n});\r\n\r\nconst Results = (props: any) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <React.Fragment>\r\n\r\n      <Fade >\r\n        {props.scanned === true ? <div><MatchRate /> <KeywordsSection /></div> :\r\n          props.loading === true ?\r\n            <div>\r\n              <Typography variant=\"h4\" component=\"h4\" className={classes.title}>\r\n                Comparing with Job Posting...\r\n                </Typography>\r\n              <div className={classes.root}>\r\n                <LinearProgress />\r\n\r\n              </div>\r\n            </div>\r\n\r\n            :\r\n            <Typography>Scan your resume and job posting to begin</Typography>}\r\n      </Fade>\r\n    </React.Fragment>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    scanned: state.scanReducer.scanned,\r\n    loading: state.scanReducer.loading,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Results);\r\n","import React from 'react';\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Home from './components/Home/Home';\r\nimport Results from './components/Results/Results';\r\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Router>\r\n            <Navigation>\r\n                <Fade>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/results\" component={Results}/>\r\n                </Fade>\r\n            </Navigation>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../../actions/actiontypes';\r\n\r\nconst initialState = {\r\n    resumeText: \"\",\r\n    jobText: \"\",\r\n    scanText: \"compare\"\r\n  };\r\n  \r\n  const reducer = (state = initialState, action: any) => {\r\n  \r\n    switch (action.type) {\r\n      case actionTypes.CHANGE_RESUME_TEXT:\r\n        return {\r\n          ...state,\r\n          resumeText: action.text\r\n        };\r\n      case actionTypes.CLEAR_RESUME:\r\n        return {\r\n          ...state,\r\n          resumeText: action.text\r\n        };\r\n  \r\n      case actionTypes.CHANGE_JOB_TEXT:\r\n        return {\r\n          ...state,\r\n          jobText: action.text\r\n        };\r\n      case actionTypes.CLEAR_JOB:\r\n        return {\r\n          ...state,\r\n          jobText: \"\"\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","import * as actionTypes from \"../../actions/compareActionTypes\";\r\n\r\nconst initialState = {\r\n    resumeSkills: {},\r\n    jobPostingSkills: {},\r\n    scanned: false,\r\n    scanText: \"compare\",\r\n    loading:false,\r\n    rating: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n    if (action.type === actionTypes.COMPARE) {\r\n        console.log(action);\r\n        return {\r\n            ...state,\r\n            resumeSkills: action.payload['resume_skills'],\r\n            jobPostingSkills: action.payload['job_skills'],\r\n            scanned: true,\r\n            loading:false,\r\n            rating: action.payload['match_rate']\r\n        };\r\n    }\r\n\r\n    else if (action.type === actionTypes.LOADING){\r\n      return{\r\n        ...state,\r\n        loading:!state.loading,\r\n      }\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {createStore, applyMiddleware, combineReducers} from \"redux\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport textInputReducer from './store/reducers/TextInput';\r\nimport scanReducer from './store/reducers/Scan';\r\nimport thunk from 'redux-thunk'\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            light: \"#7986cb\",\r\n            main: \"#283593\",\r\n            dark: \"#3d5afe\"\r\n        },\r\n        secondary: {\r\n            main: \"#f44336\"\r\n        }\r\n    }\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n    textInputerReducer:textInputReducer,\r\n    scanReducer: scanReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <MuiThemeProvider theme={theme}>\r\n            <App />\r\n        </MuiThemeProvider>\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexWrapper\":\"styles_flexWrapper__2CbDl\",\"singleChart\":\"styles_singleChart__24VkH\",\"circularChart\":\"styles_circularChart__2k5Ri\",\"circleBg\":\"styles_circleBg__1lXC3\",\"circle\":\"styles_circle__2WAgi\",\"progress\":\"styles_progress__1rZ8y\",\"orange\":\"styles_orange__3YePm\",\"green\":\"styles_green__TNL8l\",\"blue\":\"styles_blue__5AHh4\",\"percentage\":\"styles_percentage__3pqS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"styles_Input__3PAq1\",\"button\":\"styles_button__3pAtF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__2qZI7\",\"subtitle\":\"styles_subtitle__Baqzx\"};"],"sourceRoot":""}