{"version":3,"sources":["components/Navigation/Navigation.tsx","components/Home/InputSection/InputField/InputField.tsx","actions/actiontypes.ts","components/Home/InputSection/Input.tsx","actions/TextInputActions.ts","actions/compareActions.ts","actions/compareActionTypes.ts","components/Home/Scan/Scan.tsx","components/Home/Home.tsx","components/Results/KeywordsSection/KeywordsSection.tsx","components/Results/MatchRate/Rating/Rating.tsx","components/Results/MatchRate/MatchRate.tsx","components/Results/Results.tsx","App.tsx","serviceWorker.ts","store/reducers/TextInput.ts","store/reducers/Scan.ts","index.tsx","components/Results/MatchRate/Rating/styles.module.css","components/Home/InputSection/InputField/styles.module.css","components/Home/styles.module.css"],"names":["useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","Navigation","props","classes","useTheme","React","useState","open","setOpen","links","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","to","style","textDecoration","Typography","variant","noWrap","Button","borderColor","Drawer","paper","align","direction","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","ListItemText","primary","children","InputField","Paper","elevation","component","title","TextField","id","label","multiline","rows","Input","margin","value","onChange","handleChange","clearText","CLEAR_RESUME","CHANGE_RESUME_TEXT","CLEAR_JOB","CHANGE_JOB_TEXT","connect","state","resumeText","textInputerReducer","jobText","dispatch","changeResumeText","ev","type","actionTypes","target","clearResumeText","changeJobText","clearJobText","Fragment","Container","maxWidth","marginTop","Grid","container","justify","item","xs","sm","axios","defaults","xsrfHeaderName","xsrfCookieName","saveResult","res","payload","compareTextHandler","resume_text","job_text","console","log","data","FormData","append","post","then","response","catch","error","compare","href","borderRadius","fontSize","Home","subtitle","createData","skill","resume","job_posting","desc","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","Checkbox","indeterminate","checked","inputProps","headCell","sortDirection","TableSortLabel","active","property","event","visuallyHidden","useToolbarStyles","createStyles","paddingLeft","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","dark","spacer","flex","actions","EnhancedTableToolbar","Tooltip","marginBottom","table","minWidth","tableWrapper","border","clip","height","overflow","top","resumeSkills","scanReducer","jobSkills","jobPostingSkills","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","hasOwnProperty","push","emptyRows","Math","min","length","fontWeight","Table","aria-labelledby","size","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","sort","stableSort","getSorting","slice","row","name","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","Rating","flexWrapper","singleChart","viewBox","circularChart","green","circleBg","d","circle","stroke-dasharray","rating","x","y","percentage","Box","mt","scanned","App","exact","path","Results","Boolean","window","location","hostname","match","initialState","scanText","reducer","action","createMuiTheme","rootReducer","combineReducers","textInputReducer","store","createStore","applyMiddleware","thunk","render","MuiThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.10cadd96.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Button from '@material-ui/core/Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: 'nowrap',\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: 'hidden',\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function Navigation(props:any) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const links:any = ['/', '/results', '/history', '/readability_test'];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n         <Link to=\"/\" style={{color:'white', textDecoration:'none'}}> <Typography variant=\"h6\"  noWrap>\r\n            Flip\r\n          </Typography> </Link>\r\n          <Button style={{color:'white', marginLeft:'auto'}}> Login </Button>\r\n           <Button variant=\"outlined\" \r\n           style={{color:'white', borderColor:'white', marginLeft:'20px'}}\r\n           >\r\n            Sign Up \r\n            </Button>\r\n        </Toolbar>\r\n  \r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <Typography variant=\"h6\" align=\"center\" style={{marginRight:'50px'}}>\r\n            Menu\r\n          </Typography>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n          </IconButton>\r\n\r\n        </div>\r\n\r\n        <Divider />\r\n        \r\n        <List>\r\n          {['Compare', 'Results'].map((text, index) => (\r\n              <Link to={links[index]} style={{textDecoration:'none', color:'black'}}>\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n            <ListItemText primary={text} />\r\n\r\n            </ListItem>\r\n                <Divider />\r\n            </Link>\r\n\r\n          ))}\r\n        </List>\r\n      \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n          {props.children}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React, {useState} from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport classes from './styles.module.css';\r\n\r\ntype InputProps = {\r\n    title: string,\r\n    label: string,\r\n    text: string,\r\n    handleChange: any,\r\n    clearText:any,\r\n    children: any,\r\n}\r\n\r\nconst InputField = (props: InputProps) => {\r\n\r\n    return (\r\n        <Paper elevation={5} style={{padding: \"20px\"}}>\r\n            <Typography variant=\"h5\" component=\"h5\" color=\"primary\">\r\n                {props.title}\r\n            </Typography>\r\n            <TextField\r\n                id=\"outlined-multiline-static\"\r\n                label={props.label}\r\n                multiline\r\n                rows=\"20\"\r\n                className={classes.Input}\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                value={props.text}\r\n                onChange={props.handleChange}\r\n            />\r\n            <div style={{display: 'flex', alignItems: 'center', justifyContent: 'flex-end', width: '100%'}}>\r\n                <div>\r\n                    <Button className={classes.Button} onClick={props.clearText}> {props.children} clear text</Button>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n};\r\n\r\nexport default InputField;","export const CLEAR_RESUME = 'CLEAR_RESUME';\r\nexport const CHANGE_RESUME_TEXT = 'CHANGE_RESUME_TEXT';\r\nexport const CLEAR_JOB = 'CLEAR_JOB';\r\nexport const CHANGE_JOB_TEXT = 'CHANGE_JOB_TEXT';","import React from \"react\";\r\nimport InputField from \"./InputField/InputField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    changeResumeText,\r\n    clearResumeText,\r\n    changeJobText,\r\n    clearJobText\r\n} from \"../../../actions/TextInputActions\";\r\n\r\n\r\ntype InputProps = {\r\n    resumeText: string,\r\n    jobText: string\r\n}\r\n\r\n/**\r\n * General component for inputting Text\r\n */\r\nconst InputSection = (props: any) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"lg\" style={{marginTop: \"40px\"}}>\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <InputField\r\n                            title=\"Paste Resume\"\r\n                            label=\"Resume Text\"\r\n                            text={props.resumeText}\r\n                            handleChange={props.changeResumeText}\r\n                            clearText={props.clearResumeText}\r\n                        >\r\n                            <DeleteIcon/>\r\n                        </InputField>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n\r\n                        <InputField\r\n                            title=\"Paste Job Description\"\r\n                            label=\"Job Text\"\r\n                            text={props.jobText}\r\n                            handleChange={props.changeJobText}\r\n                            clearText={props.clearJobText}\r\n                        >\r\n                            <DeleteIcon/>\r\n                        </InputField>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state: any): InputProps => {\r\n    return {\r\n        resumeText: state.textInputerReducer.resumeText,\r\n        jobText: state.textInputerReducer.jobText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        changeResumeText: (ev: any) => dispatch(changeResumeText(ev)),\r\n        clearResumeText: () => dispatch(clearResumeText()),\r\n        changeJobText: (ev: any) => dispatch(changeJobText(ev)),\r\n        clearJobText: () => dispatch(clearJobText())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(InputSection);\r\n","import * as actionTypes from \"./actiontypes\";\r\n\r\nexport function changeResumeText(event: any) {\r\n  return {\r\n    type: actionTypes.CHANGE_RESUME_TEXT,\r\n    text: event.target.value\r\n  };\r\n}\r\n\r\nexport function clearResumeText(text = \"\") {\r\n  return {\r\n    type: actionTypes.CLEAR_RESUME,\r\n    text: text\r\n  };\r\n}\r\n\r\nexport function changeJobText(e: any) {\r\n  return {\r\n    type: actionTypes.CHANGE_JOB_TEXT,\r\n    text: e.target.value\r\n  };\r\n}\r\n\r\nexport function clearJobText() {\r\n  return {\r\n    type: actionTypes.CLEAR_JOB,\r\n    text: \"\"\r\n  };\r\n}\r\n","import * as actionTypes from './compareActionTypes';\r\nimport axios from 'axios';\r\n\r\n//https://stackoverflow.com/questions/39254562/csrf-with-django-reactredux-using-axios\r\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\r\naxios.defaults.xsrfCookieName = \"csrftoken\";\r\n// Saves the result from compare\r\nexport const saveResult = (res:any) => {\r\n    return{\r\n        type:actionTypes.COMPARE,\r\n        payload:res['data']\r\n    }\r\n}\r\n\r\n\r\nexport function compare(resume_text:string, job_text:string ){\r\n    console.log(resume_text);\r\n     let data = new FormData()\r\n     data.append(\"job_text\",job_text);\r\n     data.append(\"resume_text\",resume_text);\r\n    return (dispatch:any) =>{\r\n           axios.post('/api/skill/compare/', data)\r\n  .then(function (response) {\r\n      console.log(response);\r\n      dispatch(saveResult((response)))\r\n  })\r\n  .catch(function (error) {\r\n    console.log(error);\r\n  });\r\n           \r\n    }\r\n   \r\n};\r\n","export const COMPARE = 'COMPARE';\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {connect} from 'react-redux';\r\nimport {compare} from '../../../actions/compareActions';\r\n\r\ntype ScanProps = {\r\n    resumeText: string,\r\n    jobText: string,\r\n    compareTextHandler: Function\r\n}\r\n\r\n/**\r\n * Component for scanning a users resume and a job posting\r\n */\r\nconst Scan = (props: ScanProps) => {\r\n    return (\r\n        <div\r\n            style={{marginTop: \"40px\", display: \"flex\", justifyContent: \"center\"}}\r\n        >\r\n            <Button variant=\"contained\"\r\n                    href=\"/results\"\r\n                    onClick={() => props.compareTextHandler(props.resumeText, props.jobText)}\r\n                    color=\"primary\"\r\n                    style={{color: 'white', borderRadius: '5px', width: '50%', padding: '10px', fontSize: \"1.2em\"}}>\r\n                Scan\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        resumeText: state.textInputerReducer.resumeText,\r\n        jobText: state.textInputerReducer.jobText\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n    return {\r\n        compareTextHandler: (resume_text: string, job_text: string) => dispatch(compare(resume_text, job_text)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Scan);","import React from \"react\";\r\nimport InputSection from \"./InputSection/Input\";\r\nimport Scan from \"./Scan/Scan\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport classes from './styles.module.css';\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\n/**\r\n * Basic component where a user can scan a resume and job posting\r\n */\r\nconst Home: React.FC = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <Fade >\r\n            <Typography variant={\"h3\"} className={classes.title} component={\"h3\"} align=\"center\">\r\n                Scan Your Resume and Job Posting\r\n            </Typography>\r\n            <Typography variant={\"h6\"} className={classes.subtitle} component={\"h6\"} align=\"center\">\r\n                See how closely your resume compares\r\n            </Typography>\r\n            <InputSection/>\r\n            <Scan/>\r\n            </Fade>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {createStyles, lighten, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Container from '@material-ui/core/Container';\r\nimport {connect} from 'react-redux';\r\n\r\ninterface Data {\r\n    skill: string;\r\n    resume: number;\r\n    job_posting: number;\r\n}\r\n\r\nfunction createData(\r\n    skill: string,\r\n    resume: number,\r\n    job_posting: number,\r\n): Data {\r\n    return {skill, resume, job_posting};\r\n}\r\n\r\n\r\nfunction desc<T>(a: T, b: T, orderBy: keyof T) {\r\n    if (b[orderBy] < a[orderBy]) {\r\n        return -1;\r\n    }\r\n    if (b[orderBy] > a[orderBy]) {\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction stableSort<T>(array: T[], cmp: (a: T, b: T) => number) {\r\n    const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\r\n    stabilizedThis.sort((a, b) => {\r\n        const order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    });\r\n    return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\ntype Order = 'asc' | 'desc';\r\n\r\nfunction getSorting<K extends keyof any>(\r\n    order: Order,\r\n    orderBy: K,\r\n): (a: { [key in K]: number | string }, b: { [key in K]: number | string }) => number {\r\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\ninterface headCell {\r\n    disablePadding: boolean;\r\n    id: keyof Data;\r\n    label: string;\r\n    numeric: boolean;\r\n}\r\n\r\nconst headCells: headCell[] = [\r\n    {id: 'skill', numeric: false, disablePadding: true, label: 'Skill Name'},\r\n    {id: 'resume', numeric: true, disablePadding: false, label: 'Resume'},\r\n    {id: 'job_posting', numeric: true, disablePadding: false, label: 'Job Posting'},\r\n];\r\n\r\ninterface EnhancedTableProps {\r\n    classes: ReturnType<typeof useStyles>;\r\n    numSelected: number;\r\n    onRequestSort: (event: React.MouseEvent<unknown>, property: keyof Data) => void;\r\n    onSelectAllClick: (event: React.ChangeEvent<HTMLInputElement>, checked: boolean) => void;\r\n    order: Order;\r\n    orderBy: string;\r\n    rowCount: number;\r\n}\r\n\r\nfunction EnhancedTableHead(props: EnhancedTableProps) {\r\n    const {classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort} = props;\r\n    const createSortHandler = (property: keyof Data) => (event: React.MouseEvent<unknown>) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    /*const rows = [\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n        createData('Team Work', 305, 3.7),\r\n    ];*/\r\n\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\r\n                        checked={numSelected === rowCount}\r\n                        onChange={onSelectAllClick}\r\n                        inputProps={{'aria-label': 'select all desserts'}}\r\n                    />\r\n                </TableCell>\r\n                {headCells.map(headCell => (\r\n                    <TableCell\r\n                        key={headCell.id}\r\n                        align={headCell.numeric ? 'right' : 'left'}\r\n                        padding={headCell.disablePadding ? 'none' : 'default'}\r\n                        sortDirection={orderBy === headCell.id ? order : false}\r\n                    >\r\n                        <TableSortLabel\r\n                            active={orderBy === headCell.id}\r\n                            direction={order}\r\n                            onClick={createSortHandler(headCell.id)}\r\n                        >\r\n                            {headCell.label}\r\n                            {orderBy === headCell.id ? (\r\n                                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n                            ) : null}\r\n                        </TableSortLabel>\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n}\r\n\r\nconst useToolbarStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            paddingLeft: theme.spacing(2),\r\n            paddingRight: theme.spacing(1),\r\n        },\r\n        highlight:\r\n            theme.palette.type === 'light'\r\n                ? {\r\n                    color: theme.palette.secondary.main,\r\n                    backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n                }\r\n                : {\r\n                    color: theme.palette.text.primary,\r\n                    backgroundColor: theme.palette.secondary.dark,\r\n                },\r\n        spacer: {\r\n            flex: '1 1 100%',\r\n        },\r\n        actions: {\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        title: {\r\n            flex: '0 0 auto',\r\n        },\r\n    }),\r\n);\r\n\r\ninterface EnhancedTableToolbarProps {\r\n    numSelected: number;\r\n}\r\n\r\nconst EnhancedTableToolbar = (props: EnhancedTableToolbarProps) => {\r\n    const classes = useToolbarStyles();\r\n    const {numSelected} = props;\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0,\r\n            })}\r\n        >\r\n            <div className={classes.title}>\r\n                {numSelected > 0 ? (\r\n                    <Typography color=\"inherit\" variant=\"subtitle1\">\r\n                        {numSelected} selected\r\n                    </Typography>\r\n                ) : (\r\n                    <Typography variant=\"h6\" id=\"tableTitle\">\r\n                        Nutrition\r\n                    </Typography>\r\n                )}\r\n            </div>\r\n            <div className={classes.spacer}/>\r\n            <div className={classes.actions}>\r\n                {numSelected > 0 ? (\r\n                    <Tooltip title=\"Delete\">\r\n                        <IconButton aria-label=\"delete\">\r\n                            <DeleteIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                ) : (\r\n                    <Tooltip title=\"Filter list\">\r\n                        <IconButton aria-label=\"filter list\">\r\n                            <FilterListIcon/>\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '100%',\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        paper: {\r\n            width: '100%',\r\n            marginBottom: theme.spacing(2),\r\n        },\r\n        table: {\r\n            minWidth: 750,\r\n        },\r\n        tableWrapper: {\r\n            overflowX: 'auto',\r\n        },\r\n        visuallyHidden: {\r\n            border: 0,\r\n            clip: 'rect(0 0 0 0)',\r\n            height: 1,\r\n            margin: -1,\r\n            overflow: 'hidden',\r\n            padding: 0,\r\n            position: 'absolute',\r\n            top: 20,\r\n            width: 1,\r\n        },\r\n    }),\r\n);\r\nconst KeywordsSection = (props: any) => {\r\n    const classes = useStyles();\r\n    const [order, setOrder] = React.useState<Order>('asc');\r\n    const [orderBy, setOrderBy] = React.useState<keyof Data>('job_posting');\r\n    const [selected, setSelected] = React.useState<string[]>([]);\r\n    const [page, setPage] = React.useState(0);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n    // Build array of rows\r\n    let rows: Array<Data> = [];\r\n    for (let key in props.jobSkills) {\r\n        if (props.resumeSkills.hasOwnProperty(key)) {\r\n            rows.push(createData(key, props.resumeSkills[key], props.jobSkills[key]))\r\n        } else {\r\n            rows.push(createData(key, 0, props.jobSkills[key]))\r\n        }\r\n    }\r\n\r\n    const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n        const isDesc = orderBy === property && order === 'desc';\r\n        setOrder(isDesc ? 'asc' : 'desc');\r\n        setOrderBy(property);\r\n    };\r\n\r\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (event.target.checked) {\r\n            const newSelecteds = rows.map(n => n.skill);\r\n            setSelected(newSelecteds);\r\n            return;\r\n        }\r\n        setSelected([]);\r\n    };\r\n\r\n    const handleClick = (event: React.MouseEvent<unknown>, name: string) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected: string[] = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1),\r\n            );\r\n        }\r\n\r\n        setSelected(newSelected);\r\n    };\r\n\r\n    const handleChangePage = (event: unknown, newPage: number) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const handleChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    const isSelected = (name: string) => selected.indexOf(name) !== -1;\r\n\r\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n\r\n    return (\r\n        <Container maxWidth={\"lg\"} style={{marginTop: '40px'}}>\r\n            <Typography variant={\"h4\"} component=\"h4\" align={\"left\"}\r\n                        style={{fontWeight: 500}}>\r\n                Employer Skills\r\n            </Typography>\r\n            <Typography variant={\"h6\"} component=\"h6\" align={\"left\"}\r\n                        style={{marginBottom: '20px', fontWeight: 500, color: 'rgba(0,0,0,0.5)'}}>\r\n                Hover over any of the column names to sort the column\r\n            </Typography>\r\n            <div className={classes.root}>\r\n                <Paper className={classes.paper}>\r\n                    <EnhancedTableToolbar numSelected={selected.length}/>\r\n                    <div className={classes.tableWrapper}>\r\n                        <Table\r\n                            className={classes.table}\r\n                            aria-labelledby=\"tableTitle\"\r\n                            size={dense ? 'small' : 'medium'}\r\n                        >\r\n                            <EnhancedTableHead\r\n                                classes={classes}\r\n                                numSelected={selected.length}\r\n                                order={order}\r\n                                orderBy={orderBy}\r\n                                onSelectAllClick={handleSelectAllClick}\r\n                                onRequestSort={handleRequestSort}\r\n                                rowCount={rows.length}\r\n                            />\r\n                            <TableBody>\r\n                                {stableSort(rows, getSorting(order, orderBy))\r\n                                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                    .map((row, index) => {\r\n                                        const isItemSelected = isSelected(row.skill);\r\n                                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                                        return (\r\n                                            <TableRow\r\n                                                hover\r\n                                                onClick={event => handleClick(event, row.skill)}\r\n                                                role=\"checkbox\"\r\n                                                aria-checked={isItemSelected}\r\n                                                tabIndex={-1}\r\n                                                key={row.skill}\r\n                                                selected={isItemSelected}\r\n                                            >\r\n                                                <TableCell padding=\"checkbox\">\r\n                                                    <Checkbox\r\n                                                        checked={isItemSelected}\r\n                                                        inputProps={{'aria-labelledby': labelId}}\r\n                                                    />\r\n                                                </TableCell>\r\n\r\n                                                <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                                                    {row.skill}\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\">{row.resume}</TableCell>\r\n                                                <TableCell align=\"right\">{row.job_posting}</TableCell>\r\n\r\n                                            </TableRow>\r\n                                        );\r\n                                    })}\r\n                                {emptyRows > 0 && (\r\n                                    <TableRow style={{height: 49 * emptyRows}}>\r\n                                        <TableCell colSpan={6}/>\r\n                                    </TableRow>\r\n                                )}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                    <TablePagination\r\n                        rowsPerPageOptions={[5, 10, 25]}\r\n                        component=\"div\"\r\n                        count={rows.length}\r\n                        rowsPerPage={rowsPerPage}\r\n                        page={page}\r\n                        backIconButtonProps={{\r\n                            'aria-label': 'previous page',\r\n                        }}\r\n                        nextIconButtonProps={{\r\n                            'aria-label': 'next page',\r\n                        }}\r\n                        onChangePage={handleChangePage}\r\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                </Paper>\r\n                <FormControlLabel\r\n                    control={<Switch checked={dense} onChange={handleChangeDense}/>}\r\n                    label=\"Dense padding\"\r\n                />\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        resumeSkills: state.scanReducer.resumeSkills,\r\n        jobSkills: state.scanReducer.jobPostingSkills\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(KeywordsSection);","import React from 'react';\r\nimport classes from './styles.module.css';\r\n\r\nconst Rating = (props: any) => {\r\n    return (\r\n        <div className={classes.flexWrapper}>\r\n            <div className={classes.singleChart}>\r\n                <svg viewBox=\"0 0 36 36\" className={classes.circularChart + ' ' + classes.green}>\r\n                    <path className={classes.circleBg}\r\n                          d=\"M18 2.0845\r\n          a 15.9155 15.9155 0 0 1 0 31.831\r\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                    />\r\n                    <path className={classes.circle}\r\n                          stroke-dasharray={props.rating + \", 100\"}\r\n                          d=\"M18 2.0845\r\n          a 15.9155 15.9155 0 0 1 0 31.831\r\n          a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                    />\r\n                    <text x=\"19\" y=\"20.35\" className={classes.percentage}>{props.rating}%</text>\r\n                </svg>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Rating;","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Rating from './Rating/Rating';\r\nimport classes from \"./styles.module.css\";\r\nimport {connect} from 'react-redux';\r\n\r\nconst MatchRate = (props: any) => {\r\n    return (\r\n        <React.Fragment>\r\n            <Box mt={5}>\r\n                <Typography variant={\"h3\"} component=\"h3\" align={\"center\"}\r\n                            style={{fontWeight: 500}}>\r\n                    Check Out How You Did\r\n                </Typography>\r\n                <Typography variant={\"h5\"} component=\"h5\" align={\"center\"}\r\n                            style={{marginBottom: '20px', fontWeight: 500, color: 'rgba(0,0,0,0.5)'}}>\r\n                    Your match rating\r\n                </Typography>\r\n                <Rating rating={props.rating}/>\r\n            </Box>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        rating: state.scanReducer.rating,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(MatchRate);\r\n","import React from 'react';\r\nimport KeywordsSection from './KeywordsSection/KeywordsSection';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MatchRate from './MatchRate/MatchRate';\r\nimport {connect} from 'react-redux';\r\n// @ts-ignore\r\nimport Fade from 'react-reveal/Fade';\r\n\r\nconst Results = (props:any) =>{\r\n    return(\r\n        <React.Fragment>\r\n\r\n        <Fade >\r\n            {props.scanned === true?<div><MatchRate/> <KeywordsSection/></div>:\r\n                <Typography>Scan your resume and job posting to begin</Typography>}\r\n        </Fade>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        scanned: state.scanReducer.scanned,\r\n    };\r\n};\r\nexport default connect(mapStateToProps, null)(Results);","import React from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Home from './components/Home/Home';\nimport Results from './components/Results/Results';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\n\nconst App: React.FC = () => {\n    return (\n        <Router>\n            <Navigation>\n                <Fade>\n                    <Route exact path=\"/\" component={Home}/>\n                    <Route exact path=\"/results\" component={Results}/>\n                </Fade>\n            </Navigation>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../../actions/actiontypes';\r\n\r\nconst initialState = {\r\n    resumeText: \"\",\r\n    jobText: \"\",\r\n    scanText: \"compare\"\r\n  };\r\n  \r\n  const reducer = (state = initialState, action: any) => {\r\n  \r\n    switch (action.type) {\r\n      case actionTypes.CHANGE_RESUME_TEXT:\r\n        return {\r\n          ...state,\r\n          resumeText: action.text\r\n        };\r\n      case actionTypes.CLEAR_RESUME:\r\n        return {\r\n          ...state,\r\n          resumeText: action.text\r\n        };\r\n  \r\n      case actionTypes.CHANGE_JOB_TEXT:\r\n        return {\r\n          ...state,\r\n          jobText: action.text\r\n        };\r\n      case actionTypes.CLEAR_JOB:\r\n        return {\r\n          ...state,\r\n          jobText: \"\"\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default reducer;","import * as actionTypes from \"../../actions/compareActionTypes\";\r\n\r\nconst initialState = {\r\n    resumeSkills: {},\r\n    jobPostingSkills: {},\r\n    scanned: false,\r\n    scanText: \"compare\",\r\n    rating: 0,\r\n};\r\n\r\nconst reducer = (state = initialState, action: any) => {\r\n    if (action.type === actionTypes.COMPARE) {\r\n        console.log(action);\r\n        return {\r\n            ...state,\r\n            resumeSkills: action.payload['resume_skills'],\r\n            jobPostingSkills: action.payload['job_skills'],\r\n            scanned: true,\r\n            rating: action.payload['match_rate']\r\n        };\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, combineReducers} from \"redux\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport textInputReducer from './store/reducers/TextInput';\nimport scanReducer from './store/reducers/Scan';\nimport thunk from 'redux-thunk'\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: \"#7986cb\",\n            main: \"#283593\",\n            dark: \"#3d5afe\"\n        },\n        secondary: {\n            main: \"#f44336\"\n        }\n    }\n});\n\nconst rootReducer = combineReducers({\n    textInputerReducer:textInputReducer,\n    scanReducer: scanReducer\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nrender(\n    <Provider store={store}>\n        <MuiThemeProvider theme={theme}>\n            <App />\n        </MuiThemeProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexWrapper\":\"styles_flexWrapper__1Yaad\",\"singleChart\":\"styles_singleChart__14OBP\",\"circularChart\":\"styles_circularChart__8QN0a\",\"circleBg\":\"styles_circleBg__91kdO\",\"circle\":\"styles_circle__2Fe0F\",\"progress\":\"styles_progress__2GhS-\",\"orange\":\"styles_orange__rHjEn\",\"green\":\"styles_green__HDu-8\",\"blue\":\"styles_blue__3zXkf\",\"percentage\":\"styles_percentage__2O42d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"styles_Input__3MzCQ\",\"button\":\"styles_button__2hC9g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"styles_title__1WQf6\",\"subtitle\":\"styles_subtitle__EuxzP\"};"],"sourceRoot":""}